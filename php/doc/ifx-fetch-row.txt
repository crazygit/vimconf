ifx_fetch_row -- Get row as enumerated array

  array ifx_fetch_row(int result_id [, mixed position])~

Returns an associative array that corresponds to the fetched row, or FALSE if
there are no more rows.

Blob columns are returned as integer blob id values for use in |ifx_get_blob|
unless you have used ifx_textasvarchar(1) or ifx_byteasvarchar(1), in which
case blobs are returned as string values. Returns FALSE on error

{result_id} is a valid resultid returned by |ifx_query| or |ifx_prepare|
(select type queries only!).

{position} is an optional parameter for a "fetch" operation on "scroll"
cursors: "NEXT", "PREVIOUS", "CURRENT", "FIRST", "LAST" or a number. If you
specify a number, an "absolute" row fetch is executed. This parameter is
optional, and only valid for SCROLL cursors.

|ifx_fetch_row| fetches one row of data from the result associated with the
specified result identifier. The row is returned as an array. Each result
column is stored in an array offset, starting at offset 0, with the column
name as key.

Subsequent calls to |ifx_fetch_row| would return the next row in the result
set, or FALSE if there are no more rows.

Informix fetch rows

<?php >
  $rid = ifx_prepare ("select * from emp where name like " . $name,
                       $connid, IFX_SCROLL);
  if (! $rid) {
      /* ... error ... */
  }
  $rowcount = ifx_affected_rows($rid);
  if ($rowcount > 1000) {
      printf ("Too many rows in result set (%d)\n<br />", $rowcount);
      die ("Please restrict your query<br />\n");
  }
  if (! ifx_do ($rid)) {
     /* ... error ... */
  }
  $row = ifx_fetch_row ($rid, "NEXT");
  while (is_array($row)) {
      for (reset($row); $fieldname=key($row); next($row)) {
          $fieldvalue = $row[$fieldname];
          printf ("%s = %s,", $fieldname, $fieldvalue);
      }
      printf("\n<br />");
      $row = ifx_fetch_row($rid, "NEXT");
  }
  ifx_free_result ($rid);
?>

vim:ft=help:
