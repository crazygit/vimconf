SoapClient->__soapCall() -- Calls a SOAP function

  mixed __soapCall(string function_name [, array arguments [, array options [, mixed input_headers [, array output_headers]]]])~

This is a low level API function that is used to make a SOAP call. Usually, in
WSDL mode, you can simply call SOAP functions as SoapClient methods. This
method useful in non-WSDL mode when soapaction is unknown, uri differs from
the default or when sending and/or receiving SOAP Headers.

On error, a call to a SOAP function can cause PHP to throw exceptions or
return a SoapFault object if exceptions are disabled. To check if the
function call failed to catch the SoapFault exceptions, check the result with
|is_soap_fault|.

SOAP functions may return one, or multiple values. If only one value is
returned by the SOAP function, the return value of __soapCall will be a
simple value (e.g. an integer, a string, etc). If multiple values are
returned, __soapCall will return an associative array of named output
parameters.

SoapClient->__soapCall() Examples

<?php >
  $client = new SoapClient("some.wsdl");
  $client->SomeFunction($a, $b, $c);
  
  $client->__soapCall("SomeFunction", array($a, $b, $c));
  $client->__soapCall("SomeFunction", array($a, $b, $c), NULL,
                      new SoapHeader(), $output_headers);
  
  
  $client = new SoapClient(null, array('location' => "http://localhost/soap.php",
                                       'uri'      => "http://test-uri/"));
  $client->SomeFunction($a, $b, $c);
  $client->__soapCall("SomeFunction", array($a, $b, $c));
  $client->__soapCall("SomeFunction", array($a, $b, $c),
                      array('soapaction' => 'some_action',
                            'uri'        => 'some_uri'));
?>

|is_soap_fault|

vim:ft=help:
