tidy_parse_string -- Parse a document stored in a string

Procedural style:

  tidy tidy_parse_string(string input [, mixed config [, string encoding]])~

Object oriented style:

  bool tidy->parseString(string input [, mixed config [, string encoding, string input [, mixed config [, string encoding]]]])~

|tidy_parse_string| parses a document stored in a string.

The {config} parameter can be passed either as an array or as a string. If you
pass it as a string, it means the name of the configuration file, otherwise it
is interpreted as the options themselves. Check
http://tidy.sourceforge.net/docs/quickref.html for an explanation about each
option.

The {encoding} parameter sets the encoding for input/output documents. The
possible values for {encoding} are: ascii, latin0, latin1, raw, utf8,
iso2022, mac, win1252, ibm858, utf16, utf16le, utf16be, big5 and shiftjis.

|tidy_parse_string| example

<?php >
  ob_start();
?>
  
  <html>
    <head>
     <title>test</title>
    </head>
    <body>
     <p>error<br>another line</i>
    </body>
  </html>
<?php >
  $buffer = ob_get_clean();
  $config = array('indent' => TRUE,
                  'output-xhtml' => TRUE,
                  'wrap' => 200);
  
  $tidy = tidy_parse_string($buffer, $config, 'UTF8');
  
  $tidy->cleanRepair();
  echo $tidy;
?>

The above example will output:

  <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
      "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
  <html xmlns="http://www.w3.org/1999/xhtml">
    <head>
      <title>
        test
      </title>
    </head>
    <body>
      <p>
        error<br />
        another line
      </p>
    </body>
  </html>

The optional parameters {config} and {encoding} were added in Tidy 2.0.

See also |tidy_parse_file|, |tidy_repair_file| and |tidy_repair_string|.

vim:ft=help:
