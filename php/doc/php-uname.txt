php_uname -- Returns information about the operating system PHP is running on

  string php_uname([string mode])~

|php_uname| returns a description of the operating system PHP is running on.
For the name of just the operating system, consider using the PHP_OS
constant, but be reminded this constant will contain the operating system PHP
was built on.

On Unix, the output reverts to displaying the operating system information PHP
was built on if it cannot determine the currently running OS.

{mode} is a single character that defines what information is returned: 'a':
This is the default. Contains all modes in the sequence "s n r v m".

's': Operating system name. eg. FreeBSD.

'n': Host name. eg. localhost.example.com.

'r': Release name. eg. 5.1.2-RELEASE.

'v': Version information. Varies a lot between operating systems.

'm': Machine type. eg. i386.

Some |php_uname| examples

<?php >
  echo php_uname();
  echo PHP_OS;
  
  /* Some possible outputs:
  Linux localhost 2.4.21-0.13mdk #1 Fri Mar 14 15:08:06 EST 2003 i686
  Linux
  
  FreeBSD localhost 3.2-RELEASE #15: Mon Dec 17 08:46:02 GMT 2001
  FreeBSD
  
  Windows NT XN1 5.1 build 2600
  WINNT
  */
  
  if (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') {
      echo 'This is a server using Windows!';
  } else {
      echo 'This is a server not using Windows!';
  }
?>

There are also some related Predefined PHP constants that may come in handy,
for example:

A few OS related constant examples

<?php >
  // *nix
  echo DIRECTORY_SEPARATOR; // /
  echo PHP_SHLIB_SUFFIX;    // so
  echo PATH_SEPARATOR;      // :
  
  // Win*
  echo DIRECTORY_SEPARATOR; // \
  echo PHP_SHLIB_SUFFIX;    // dll
  echo PATH_SEPARATOR;      // ;
?>

See also |phpversion|, |php_sapi_name|, and |phpinfo|.

vim:ft=help:
