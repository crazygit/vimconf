str_split -- Convert a string to an array

  array str_split(string string [, int split_length])~

Converts a string to an array. If the optional {split_length} parameter is
specified, the returned array will be broken down into chunks with each being
{split_length} in length, otherwise each chunk will be one character in
length.

FALSE is returned if {split_length} is less than 1. If the {split_length}
length exceeds the length of {string}, the entire string is returned as the
first (and only) array element.

Example uses of |str_split|

<?php >
  $str = "Hello Friend";
  
  $arr1 = str_split($str);
  $arr2 = str_split($str, 3);
  
  print_r($arr1);
  print_r($arr2);
?>

Output may look like:

  Array
  (
      [0] => H
      [1] => e
      [2] => l
      [3] => l
      [4] => o
      [5] =>
      [6] => F
      [7] => r
      [8] => i
      [9] => e
      [10] => n
      [11] => d
  )
  
  Array
  (
      [0] => Hel
      [1] => lo 
      [2] => Fri
      [3] => end
  )

Examples related to |str_split|

<?php >
  $str = "Hello Friend";
  
  echo $str{0};  // H
  echo $str{8};  // i
  
  // Creates: array('H','e','l','l','o',' ','F','r','i','e','n','d')
  $arr1 = preg_split('//', $str, -1, PREG_SPLIT_NO_EMPTY);
?>

See also |chunk_split|, |preg_split|, |split|, |count_chars|,
|str_word_count|, and for.

vim:ft=help:
