mysqli->query -- Performs a query on the database

Procedural style:

  mixed mysqli_query(mysqli link, string query [, int resultmode])~

Object oriented style (method):

  mixed query(mysqli link, string query [, int resultmode, string query [, int resultmode]])~

The |mysqli_query| function is used to simplify the act of performing a query
against the database represented by the {link} parameter.

Functionally, using this function is identical to calling |mysqli_real_query|
followed either by |mysqli_use_result| or |mysqli_store_result| where {query}
is the query string itself and {resultmode} is either the constant
MYSQLI_USE_RESULT or MYSQLI_STORE_RESULT depending on the desired behavior.
By default, if the {resultmode} is not provided MYSQLI_STORE_RESULT is used.

If you execute |mysqli_query| with {resultmode} MYSQLI_USE_RESULT all
subsequent calls will return error Commands out of sync unless you call
|mysqli_free_result|.

Returns TRUE on success or FALSE on failure. For SELECT, SHOW, DESCRIBE or
EXPLAIN |mysqli_query| will return a result object.

|mysqli_real_query|, |mysqli_multi_query| and |mysqli_free_result|.

Object oriented style

<?php >
  $mysqli = new mysqli("localhost", "my_user", "my_password", "world");
  
  /* check connection */
  if (mysqli_connect_errno()) {
      printf("Connect failed: %s\n", mysqli_connect_error());
      exit();
  }
  
  /* Create table doesn't return a resultset */
  if ($mysqli->query("CREATE TEMPORARY TABLE myCity LIKE City") === TRUE) {
      printf("Table myCity successfully created.\n");
  }
  
  /* Select queries return a resultset */
  if ($result = $mysqli->query("SELECT Name FROM City LIMIT 10")) {
      printf("Select returned %d rows.\n", $result->num_rows);
  
      /* free result set */
      $result->close();
  }
  
  /* If we have to retrieve large amount of data we use MYSQLI_USE_RESULT */
  if ($result = $mysqli->query("SELECT * FROM City", MYSQLI_USE_RESULT)) {
  
      /* Note, that we can't execute any functions which interact with the
         server until result set was closed. All calls will return an 
         'out of sync' error */
      if (!$mysqli->query("SET @a:='this will not work'")) {
          printf("Error: %s\n", $mysqli->error);
      }
      $result->close();
  }
  
  $mysqli->close();
?>

Procedural style

<?php >
  $link = mysqli_connect("localhost", "my_user", "my_password", "world");
  
  /* check connection */
  if (mysqli_connect_errno()) {
      printf("Connect failed: %s\n", mysqli_connect_error());
      exit();
  }
  
  /* Create table doesn't return a resultset */
  if (mysqli_query($link, "CREATE TEMPORARY TABLE myCity LIKE City") === TRUE) {
      printf("Table myCity successfully created.\n");
  }
  
  /* Select queries return a resultset */
  if ($result = mysqli_query($link, "SELECT Name FROM City LIMIT 10")) {
      printf("Select returned %d rows.\n", mysqli_num_rows($result));
  
      /* free result set */
      mysqli_free_result($result);
  }
  
  /* If we have to retrieve large amount of data we use MYSQLI_USE_RESULT */
  if ($result = mysqli_query($link, "SELECT * FROM City", MYSQLI_USE_RESULT)) {
  
      /* Note, that we can't execute any functions which interact with the
         server until result set was closed. All calls will return an 
         'out of sync' error */
      if (!mysqli_query($link, "SET @a:='this will not work'")) {
          printf("Error: %s\n", mysqli_error($link));
      }
      mysqli_free_result($result);
  }
  
  mysqli_close($link);
?>

The above example will output:

  Table myCity successfully created.
  Select returned 10 rows.
  Error: Commands out of sync;  You can't run this command now

vim:ft=help:
