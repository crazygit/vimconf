array_diff_key -- Computes the difference of arrays using keys for comparison

  array array_diff_key(array array1, array array2 [, array ...])~

|array_diff_key| returns an array containing all the values of {array1} that
have keys that are not present in any of the other arguments. Note that the
associativity is preserved. This function is like |array_diff| except the
comparison is done on the keys instead of the values.

|array_diff_key| example

<?php >
  $array1 = array('blue'  => 1, 'red'  => 2, 'green'  => 3, 'purple' => 4);
  $array2 = array('green' => 5, 'blue' => 6, 'yellow' => 7, 'cyan'   => 8);
  
  var_dump(array_diff_key($array1, $array2));
?>

The above example will output:

  array(2) {
    ["red"]=>
    int(2)
    ["purple"]=>
    int(4)
  }

The two keys from the key => value pairs are considered equal only if (string)
$key1 === (string) $key2 . In other words a strict type check is executed so
the string representation must be the same.

Please note that this function only checks one dimension of a n-dimensional
array. Of course you can check deeper dimensions by using
array_diff_key($array1[0], $array2[0]);.

See also |array_diff|, |array_udiff| |array_diff_assoc|, |array_diff_uassoc|,
|array_udiff_assoc|, |array_udiff_uassoc|, |array_diff_ukey|,
|array_intersect|, |array_intersect_assoc|, |array_intersect_uassoc|,
|array_intersect_key| and |array_intersect_ukey|.

vim:ft=help:
