eval -- Evaluate a string as PHP code

  mixed eval(string code_str)~

|eval| evaluates the string given in {code_str} as PHP code. Among other
things, this can be useful for storing code in a database text field for
later execution.

There are some factors to keep in mind when using |eval|. Remember that the
string passed must be valid PHP code, including things like terminating
statements with a semicolon so the parser doesn't die on the line after the
|eval|, and properly escaping things in {code_str}.

Also remember that variables given values under |eval| will retain these
values in the main script afterwards.

A return statement will terminate the evaluation of the string immediately. As
of PHP 4, |eval| returns NULL unless return is called in the evaluated code,
in which case the value passed to return is returned. In case of a parse
error in the evaluated code, |eval| returns FALSE. In case of a fatal error
in the evaluated code, the whole script exits. In PHP 3, |eval| does not
return a value.

|eval| example - simple text merge

<?php >
  $string = 'cup';
  $name = 'coffee';
  $str = 'This is a $string with my $name in it.';
  echo $str. "\n";
  eval("\$str = \"$str\";");
  echo $str. "\n";
?>

The above example will output:

  This is a $string with my $name in it.
  This is a cup with my coffee in it.

As with anything that outputs its result directly to the browser, you can use
the output-control functions to capture the output of this function, and save
it in a string (for example).

See also |call_user_func|.

vim:ft=help:
