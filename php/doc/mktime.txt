mktime -- Get Unix timestamp for a date

  int mktime([int hour [, int minute [, int second [, int month [, int day [, int year [, int is_dst]]]]]]])~

Returns the Unix timestamp corresponding to the arguments given. This
timestamp is a long integer containing the number of seconds between the Unix
Epoch (January 1 1970 00:00:00 GMT) and the time specified.

Arguments may be left out in order from right to left; any arguments thus
omitted will be set to the current value according to the local date and
time.

{hour} The number of the hour.

{minute} The number of the minute.

{second} The number of seconds past the minute.

{month} The number of the month.

{day} The number of the day.

{year} The number of the year, may be a two or four digit value, with values
between 0-69 mapping to 2000-2069 and 70-100 to 1970-2000. On systems where
time_t is a 32bit signed integer, as most common today, the valid range for
{year} is somewhere between 1901 and 2038, although this limitation is
overcome as of PHP 5.1.0.

{is_dst} This parameter can be set to 1 if the time is during daylight savings
time (DST), 0 if it is not, or -1 (the default) if it is unknown whether the
time is within daylight savings time or not. If it's unknown, PHP tries to
figure it out itself. This can cause unexpected (but not incorrect) results.
Some times are invalid if DST is enabled on the system PHP is running on or
{is_dst} is set to 1. If DST is enabled in e.g. 2:00, all times between 2:00
and 3:00 are invalid and |mktime| returns an undefined (usually negative)
value. Some systems (e.g. Solaris 8) enable DST at midnight so time 0:30 of
the day when DST is enabled is evaluated as 23:30 of the previous day.

As of PHP 5.1.0, this parameter became deprecated. As a result, the new
timezone handling features should be used instead.

|mktime| returns the Unix timestamp of the arguments given. If the arguments
are invalid (eg. if the year, month and day are all 0), the function returns
-1.

Version Description 3.0.10 Added {is_dst} parameter 5.1.0 the {is_dst}
parameter became deprecated

|mktime| example |mktime| is useful for doing date arithmetic and validation,
as it will automatically calculate the correct value for out-of-range input.
For example, each of the following lines produces the string "Jan-01-1998".

<?php >
  echo date("M-d-Y", mktime(0, 0, 0, 12, 32, 1997));
  echo date("M-d-Y", mktime(0, 0, 0, 13, 1, 1997));
  echo date("M-d-Y", mktime(0, 0, 0, 1, 1, 1998));
  echo date("M-d-Y", mktime(0, 0, 0, 1, 1, 98));
?>

Last day of next month The last day of any given month can be expressed as the
"0" day of the next month, not the -1 day. Both of the following examples will
produce the string "The last day in Feb 2000 is: 29".

<?php >
  $lastday = mktime(0, 0, 0, 3, 0, 2000);
  echo strftime("Last day in Feb 2000 is: %d", $lastday);
  $lastday = mktime(0, 0, 0, 4, -31, 2000);
  echo strftime("Last day in Feb 2000 is: %d", $lastday);
?>

Negative timestamps are not supported under any known version of Windows.
Therefore the range of valid years includes only 1970 through 2038.

|gmmktime| |date| |time|

vim:ft=help:
