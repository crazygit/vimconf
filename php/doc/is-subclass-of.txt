is_subclass_of -- Returns TRUE if the object has this class as one of its
parents

  bool is_subclass_of(mixed object, string class_name)~

This function returns TRUE if the object {object}, belongs to a class which is
a subclass of {class_name}, FALSE otherwise.

Since PHP 5.0.3 you may also specify the {object} parameter as a string (the
name of the class).

|is_subclass_of| example

<?php >
  // define a class
  class WidgetFactory
  {
    var $oink = 'moo';
  }
  
  // define a child class
  class WidgetFactory_Child extends WidgetFactory
  {
    var $oink = 'oink';
  }
  
  // create a new object
  $WF = new WidgetFactory();
  $WFC = new WidgetFactory_Child();
  
  if (is_subclass_of($WFC, 'WidgetFactory')) {
    echo "yes, \$WFC is a subclass of WidgetFactory\n";
  } else {
    echo "no, \$WFC is not a subclass of WidgetFactory\n";
  }
  
  
  if (is_subclass_of($WF, 'WidgetFactory')) {
    echo "yes, \$WF is a subclass of WidgetFactory\n";
  } else {
    echo "no, \$WF is not a subclass of WidgetFactory\n";
  }
  
  
  // usable only since PHP 5.0.3
  if (is_subclass_of('WidgetFactory_Child', 'WidgetFactory')) {
    echo "yes, WidgetFactory_Child is a subclass of WidgetFactory\n";
  } else {
    echo "no, WidgetFactory_Child is not a subclass of WidgetFactory\n";
  }
?>

The above example will output:

  yes, $WFC is a subclass of WidgetFactory
  no, $WF is not a subclass of WidgetFactory
  yes, WidgetFactory_Child is a subclass of WidgetFactory

See also |get_class|, |get_parent_class| and |is_a|.

vim:ft=help:
