PDOStatement::rowCount -- Returns the number of rows affected by the last SQL
statement

  int PDOStatement::rowCount()~

This function is EXPERIMENTAL. The behaviour of this function, the name of
this function, and anything else documented about this function may change
without notice in a future release of PHP. Use this function at your own
risk.

|PDOStatement::rowCount| returns the number of rows affected by the last
DELETE, INSERT, or UPDATE statement executed by the corresponding
PDOStatement object.

If the last SQL statement executed by the associated PDOStatement was a SELECT
statement, some databases may return the number of rows returned by that
statement. However, this behaviour is not guaranteed for all databases and
should not be relied on for portable applications.

Return the number of deleted rows |PDOStatement::rowCount| returns the number
of rows affected by a DELETE, INSERT, or UPDATE statement.

<?php >
  /* Delete all rows from the FRUIT table */
  $del = $dbh->prepare('DELETE FROM fruit');
  $del->execute();
  
  /* Return number of rows that were deleted */
  print("Return number of rows that were deleted:\n");
  $count = $del->rowCount();
  print("Deleted $count rows.\n");
?>

The above example will output:

  Deleted 9 rows.

Counting rows returned by a SELECT statement For most databases,
|PDOStatement::rowCount| does not return the number of rows affected by a
SELECT statement. Instead, use |PDO::query| to issue a SELECT COUNT(*)
statement with the same predicates as your intended SELECT statement, then
use |PDOStatement::fetchColumn| to retrieve the number of rows that will be
returned. Your application can then perform the correct action.

<?php >
  $sql = "SELECT COUNT(*) FROM fruit WHERE calories > 100";
  if ($res = $conn->query($sql)) {
  
      // Check the number of rows that match the SELECT statement
      if ($res->fetchColumn() > 0) {
  
          // Issue the real SELECT statement and work with the results
           $sql = "SELECT name FROM fruit WHERE calories > 100";
           foreach ($conn->query($sql) as $row) {
               print "Name: " .  $row['NAME'] . "\n";
           }
      }
      // No rows matched -- do something else
      else {
          print "No rows matched the query.";
      }
  }
  
  $res = null;
  $conn = null;
?>

The above example will output:

  apple
  banana
  orange
  pear

|PDOStatement::columnCount| |PDOStatement::fetchColumn| |PDOStatement::query|

vim:ft=help:
